{"version":3,"sources":["TimerSet.js","useDidEffect.js","TimerShow.js","Timer.js","WordGenerator.js","useKeyPress.js","WordCheck.js","ResetButton.js","WPM.js","images/logo1.svg","images/A-keycap.png","images/F-keycap.png","images/N-keycap.png","images/p-keycap.png","images/U-keycap.png","App.js","index.js"],"names":["TimerSet","props","useState","time","setTime","inputValue","setInputValue","useEffect","updateTime","className","darkMode","onKeyDown","e","key","onChange","target","value","placeholder","type","ref","inputReference","i","onClick","f","t","s","useDidEffect","fn","inputs","didMountRef","useRef","current","TimerShow","seconds","startCountdown","setStartCountdown","start","stop","interval","setInterval","StopTimer","clearInterval","Timer","timeElapsed","params","WordGenerator","word","require","RandomWordsArray","Array","join","useKeyPress","CallBack","keyPressed","setKeyPressed","ValidKeys","KeyDown","KeyUp","window","addEventListener","removeEventListener","includes","WordCheck","Words","words","fill","leftPadding","setLeftPadding","finishedChars","setFinishedChars","charAt","currentChar","setCurrentChar","substr","otherChars","setOtherChars","corrChars","setCorrChars","incorChars","setIncorChars","returnWords","updatedFinishedChars","updatedOtherChars","c","length","split","clasName","slice","ResetButton","resetRef","PressButton","clicked","blur","WPM","wpm_shown","charCount","toFixed","wpm_raw","accuracy","App","startTimer","setStartTimer","showWords","setShowWords","showTime","setShowTime","setDarkMode","StartTheTimer","inputRef","enterRef","fifteenRef","thirtyRef","sixtyRef","darkRef","href","src","Logo","alt","A_keycap","F_keycap","N_keycap","P_keycap","U_keycap","correct_params","wrong_params","d","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSA6EeA,MA1Ef,SAAkBC,GAEhB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KA6BA,OA3BAC,qBAAU,WACRN,EAAMO,WAAWL,KAChB,CAACA,IA0BF,sBAAKM,UAAWR,EAAMS,SAAW,wBAA0B,mBAA3D,UACE,uBACED,UAAWR,EAAMS,SAAW,sBAAwB,iBACpDC,UAXa,SAACC,GACJ,UAAVA,EAAEC,KACJT,EAAQC,IAUNS,SAAU,SAACF,GAAD,OAAON,EAAcM,EAAEG,OAAOC,QACxCC,YAAY,kBACZC,KAAK,SACLC,IAAKlB,EAAMmB,eAAeC,IAE5B,wBACEZ,UAAWR,EAAMS,SAAW,8BAAgC,yBAC5DY,QAAS,kBAAMlB,EAAQC,IACvBc,IAAKlB,EAAMmB,eAAeR,EAH5B,sBAOA,wBACEH,UAAWR,EAAMS,SAAW,0BAA4B,qBACxDY,QAzCgB,WACpBlB,EAAQ,KAyCJe,IAAKlB,EAAMmB,eAAeG,EAH5B,gBAOA,wBACEd,UAAWR,EAAMS,SAAW,0BAA4B,qBACxDY,QA3Ce,WACnBlB,EAAQ,KA2CJe,IAAKlB,EAAMmB,eAAeI,EAH5B,gBAOA,wBACEf,UAAWR,EAAMS,SAAW,0BAA4B,qBACxDY,QA7Cc,WAClBlB,EAAQ,KA6CJe,IAAKlB,EAAMmB,eAAeK,EAH5B,oBCrDSC,MAXf,SAAsBC,EAAIC,GACtB,IAAMC,EAAcC,kBAAO,GAE3BvB,qBAAU,WACJsB,EAAYE,QACdJ,IAEAE,EAAYE,SAAU,IACvBH,ICkDQI,MAzDf,SAAmB/B,GAEjB,MAAwBC,mBAASD,EAAMgC,SAAvC,mBAAO9B,EAAP,KAAaC,EAAb,KACA,EAA4CF,oBAAS,GAArD,mBAAOgC,EAAP,KAAuBC,EAAvB,KAEAT,GAAa,WACPzB,EAAMmC,QACJjC,EAAO,EACTgC,GAAkB,GAElBlC,EAAMoC,MAAK,MAGd,CAACpC,EAAMmC,QAEV7B,qBAAU,WACc,IAAlBN,EAAMgC,SACR7B,EAAQH,EAAMgC,WAEf,CAAChC,EAAMgC,UAEV1B,qBAAU,WACR,GAAI2B,EACF,IAAMI,EAAWC,aAAY,WAC3BnC,GAAQ,SAACoB,GAAD,OAAQA,EAAI,EAAIA,EAAI,EAAIgB,EAAUF,QACzC,OAEJ,CAACJ,IAGJ,IAAMM,EAAY,SAACF,GAEjBrC,EAAMoC,MAAK,GACXI,cAAcH,GACdlC,EAAQH,EAAMgC,SACdE,GAAkB,IAcpB,OACE,qBAAK1B,UAAU,iBAAf,SACE,sBAAKA,UAAWR,EAAMS,SAAW,iBAAmB,YAApD,cAAoEP,EAApE,UCxBSuC,MA1Bf,SAAezC,GAEX,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAG,qBAAU,WACNN,EAAM0C,YAAYxC,KACnB,CAACA,IAGA,gCACA,cAAC,EAAD,CACIK,WAAY,SAACoC,GAAD,OAAYxC,EAAQwC,IAChCxB,eAAgBnB,EAAMmB,eACtBV,SAAUT,EAAMS,WAGpB,cAAC,EAAD,CACI0B,MAAOnC,EAAMmC,MACbH,QAAS9B,EACTkC,KAAM,SAACO,GAAD,OAAY3C,EAAMoC,KAAKO,IAC7BlC,SAAUT,EAAMS,eCxBtBmC,EAAgB,WAKlB,IAJA,IAAMC,EAAOC,EAAQ,IAEjBC,EAAmB,IAAIC,MAAM,IAExB5B,EAAE,EAAGA,EAAE,GAAIA,IAChB2B,EAAiB3B,GAAKyB,IAK1B,OAFoBE,EAAiBE,KAAK,MC2B/BC,MAlCf,SAAqBC,GACjB,MAAoClD,mBAAS,MAA7C,mBAAOmD,EAAP,KAAmBC,EAAnB,KACMC,EAAY,CACd,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACrF,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KA2B5C,OAxBAhD,qBAAU,WAEN,IAAMiD,EAAU,SAAC5C,GACb0C,EAAc1C,EAAEC,MAGd4C,EAAQ,WACVH,EAAc,OAMlB,OAHAI,OAAOC,iBAAiB,UAAWH,GACnCE,OAAOC,iBAAiB,QAASF,GAE1B,WACHC,OAAOE,oBAAoB,UAAWJ,GACtCE,OAAOE,oBAAoB,QAASH,OAI5ClD,qBAAU,WACFgD,EAAUM,SAASR,IACnBD,EAASC,KAEd,CAACA,IACGA,G,MCsCIS,MAlEf,SAAmB7D,GAEjB,IAAM8D,EAAQ9D,EAAM+D,MAGpB,EAAsC9D,mBACpC,IAAI+C,MAAM,IAAIgB,KAAK,KAAKf,KAAK,KAD/B,mBAAOgB,EAAP,KAAoBC,EAApB,KAGA,EAA0CjE,mBAAS,IAAnD,mBAAOkE,EAAP,KAAsBC,EAAtB,KACA,EAAsCnE,mBAAS6D,EAAMO,OAAO,IAA5D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCtE,mBAAS6D,EAAMU,OAAO,IAA1D,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCzE,mBAAS,GAA3C,mBAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAAoC3E,mBAAS,GAA7C,mBAAO4E,EAAP,KAAmBC,EAAnB,KA8BA,OA5BAxE,qBAAU,WACR,OAAO,kBAAMN,EAAM+E,YAAYJ,EAAWE,OAG5C3B,GAAY,SAACtC,GACX,IAAIoE,EAAuBb,EACvBc,EAAoBR,EAEpB7D,IAAQ0D,GACVM,GAAa,SAACM,GAAD,OAAOA,EAAI,KAEpBjB,EAAYkB,QACdjB,EAAeD,EAAYO,OAAO,IAGpCJ,EADAY,GAAwBV,GAExBC,EAAeE,EAAWJ,OAAO,KACjCY,EAAoBR,EAAWD,OAAO,IAChBY,MAAM,KAAKD,OAAS,KACxCF,GAAqB,IAAMrC,KAE7B8B,EAAcO,IAEdH,GAAc,SAAC1D,GAAD,OAAOA,EAAI,QAM3B,qBAAKiE,SAAS,OAAd,SAEE,oBAAG7E,UAAU,YAAb,UACE,sBACEA,UAAWR,EAAMS,SAAW,qBAAuB,gBADrD,UAGIwD,EAAcE,GAAemB,OAAO,MAExC,sBACE9E,UACER,EAAMS,SAAW,yBAA2B,oBAFhD,SAKG6D,IAEH,sBAAM9D,UAAWR,EAAMS,SAAW,oBAAsB,eAAxD,SACGgE,EAAWD,OAAO,EAAG,YC3BjBe,MAlCf,SAAqBvF,GAEnB,IAAMwF,EAAW3D,mBAOjBvB,qBAAU,WAER,OADAmD,OAAOC,iBAAiB,UAAW+B,GAC5B,kBAAMhC,OAAOE,oBAAoB,UAAW8B,MAClD,IAGH,IAAMA,EAAc,SAAC9E,GACL,UAAVA,EAAEC,KACJZ,EAAM0F,WAKV,OACE,8BACE,wBACElF,UAAWR,EAAMS,SAAW,oBAAsB,eAClDS,IAAKsE,EACLnE,QAvBY,WAChBrB,EAAM0F,UACNF,EAAS1D,QAAQ6D,QAkBf,iCCzBOC,G,MAAM,SAAC5F,GAClB,IAAM6F,GAAa7F,EAAM8F,UAAUZ,EAAI,GAAKlF,EAAM0C,YAAc,KAAKqD,QACnE,GAGIC,IACHhG,EAAM8F,UAAUZ,EAAIlF,EAAM8F,UAAU1E,GACrC,GACCpB,EAAM0C,YAAc,KACrBqD,QAAQ,GAEJE,GACiB,IAApBjG,EAAM8F,UAAUZ,GAChBlF,EAAM8F,UAAUZ,EAAIlF,EAAM8F,UAAU1E,IACrC2E,QAAQ,GAEV,OACE,sBAAKvF,UAAWR,EAAMS,SAAW,oBAAsB,eAAvD,UAEE,sBAAKD,UAAU,WAAf,kBAAgCqF,KAChC,sBAAKrF,UAAU,qBAAf,UACE,4CAAewF,KACf,6CAAgBC,EAAhB,OACA,+CAAkBjG,EAAM8F,UAAUZ,KAClC,mDAAsBlF,EAAM8F,UAAU1E,aC1B/B,MAA0B,kCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qCC+L1B8E,MA/Kf,WAEE,MAAoCjG,oBAAS,GAA7C,mBAAOkG,EAAP,KAAmBC,EAAnB,KACA,EAAkCnG,oBAAS,GAA3C,mBAAOoG,EAAP,KAAkBC,EAAlB,KACA,EAAkCrG,mBAAS,GAA3C,mBAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAAoC3E,mBAAS,GAA7C,mBAAO4E,EAAP,KAAmBC,EAAnB,KACA,EAAwB7E,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,GAAzC,mBAAOsG,EAAP,KAAiBC,EAAjB,KACA,EAAgCvG,oBAAS,GAAzC,mBAAOQ,EAAP,KAAiBgG,EAAjB,KAEAnG,qBAAU,WACRkG,EAAYtG,KACX,CAACmG,IAEJ/F,qBAAU,WACR,IAAK6F,EAEH,OADA1C,OAAOC,iBAAiB,UAAWgD,GAC5B,kBAAMjD,OAAOE,oBAAoB,UAAW+C,MAEpD,CAACP,IAEJ,IAAMQ,EAAW9E,mBACX+E,EAAW/E,mBACXgF,EAAahF,mBACbiF,EAAYjF,mBACZkF,EAAWlF,mBACXmF,EAAUnF,mBAGVyB,EAAY,CAChB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGIQ,EAAQlB,IAGR8D,EAAgB,SAAhBA,EAAiB/F,GACjB2C,EAAUM,SAASjD,EAAEC,OACvB+F,EAAS7E,QAAQ6D,OACjBiB,EAAS9E,QAAQ6D,OACjBkB,EAAW/E,QAAQ6D,OACnBmB,EAAUhF,QAAQ6D,OAClBoB,EAASjF,QAAQ6D,OACjBS,GAAc,GACd3C,OAAOE,oBAAoB,UAAW+C,KAS1C,OACE,sBAAKlG,UAAWC,EAAW,sBAAwB,iBAAnD,UACE,oBAAGwG,KAAK,eAAezG,UAAU,OAAjC,UACE,qBAAK0G,IAAKC,EAAMC,IAAI,SACpB,qBAAK5G,UAAWC,EAAW,iBAAmB,YAA9C,yDAIF,qBAAKD,UAAU,kBAAkB0G,IAAKG,EAAUD,IAAI,aACpD,qBAAK5G,UAAU,kBAAkB0G,IAAKI,EAAUF,IAAI,aACpD,qBAAK5G,UAAU,kBAAkB0G,IAAKK,EAAUH,IAAI,aACpD,qBAAK5G,UAAU,kBAAkB0G,IAAKM,EAAUJ,IAAI,aACpD,qBAAK5G,UAAU,kBAAkB0G,IAAKO,EAAUL,IAAI,aAEpD,cAAC,EAAD,CACEjF,MAAOgE,EACP/D,KArBe,SAACO,GACpB2D,EAAa3D,IAqBTD,YAAa,SAACC,GAAD,OAAYxC,EAAQwC,IACjCxB,eAAgB,CACdC,EAAGuF,EACHhG,EAAGiG,EACHtF,EAAGuF,EACHtF,EAAGuF,EACHtF,EAAGuF,GAELtG,SAAUA,IAGZ,8BACG4F,GACC,qBAAK7F,UAAU,WAAf,SACE,cAAC,EAAD,CACEuE,YAAa,SAAC2C,EAAgBC,GAC5B/C,EAAa8C,GACb5C,EAAc6C,IAEhB5D,MAAOD,EACPrD,SAAUA,QAMlB,+BACI4F,GACA,cAAC,EAAD,CACEP,UAAW,CAAEZ,EAAGP,EAAWvD,EAAGyD,GAC9BnC,YAAa6D,EACb9F,SAAUA,MAKhB,qBAAKD,UAAU,sBAAf,UACI6F,GACA,cAAC,EAAD,CACE5F,SAAUA,EACViF,QAAS,WACPY,GAAa,GACbF,GAAc,QAKtB,qBAAK5F,UAAU,qBAAf,SACGC,EACC,wBACED,UAAU,cACVa,QAAS,WACPoF,GAAY,SAACmB,GAAD,OAAQA,KACpBZ,EAAQlF,QAAQ6D,QAElBzE,IAAK8F,EANP,wBAWA,wBACExG,UAAU,cACVa,QAAS,WACPoF,GAAY,SAACmB,GAAD,OAAQA,KACpBZ,EAAQlF,QAAQ6D,QAElBzE,IAAK8F,EANP,6BCvKVa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.59643eec.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./Timer.css\";\n\nfunction TimerSet(props) {\n  //hooks\n  const [time, setTime] = useState(30);\n  const [inputValue, setInputValue] = useState(null);\n\n  useEffect(() => {\n    props.updateTime(time);\n  }, [time]);\n\n  //functions\n  const FifteenButton = () => {\n    setTime(15);\n    // setInputValue(15);\n  };\n\n  const ThirtyButton = () => {\n    setTime(30);\n    // setInputValue(30);\n  };\n\n  const SixtyButton = () => {\n    setTime(60);\n    // setInputValue(60);\n  };\n\n  const EnterCheck = (e) => {\n    if (e.key === \"Enter\") {\n      setTime(inputValue);\n    }\n  };\n\n  //return functions\n  return (\n    <div className={props.darkMode ? \"top-time-buttons-dark\" : \"top-time-buttons\"} >\n      <input\n        className={props.darkMode ? \"time-input-box-dark\" : \"time-input-box\"}\n        onKeyDown={EnterCheck}\n        onChange={(e) => setInputValue(e.target.value)}\n        placeholder=\"Time in seconds\"\n        type=\"number\"\n        ref={props.inputReference.i}\n      />\n      <button\n        className={props.darkMode ? \"set-time-button-preset-dark\" : \"set-time-button-preset\"}\n        onClick={() => setTime(inputValue)}\n        ref={props.inputReference.e}\n      >\n        Set Time\n      </button>\n      <button\n        className={props.darkMode ? \"time-button-preset-dark\" : \"time-button-preset\"}\n        onClick={FifteenButton}\n        ref={props.inputReference.f}\n      >\n        15\n      </button>\n      <button\n        className={props.darkMode ? \"time-button-preset-dark\" : \"time-button-preset\"}\n        onClick={ThirtyButton}\n        ref={props.inputReference.t}\n      >\n        30\n      </button>\n      <button\n        className={props.darkMode ? \"time-button-preset-dark\" : \"time-button-preset\"}\n        onClick={SixtyButton}\n        ref={props.inputReference.s}\n      >\n        60\n      </button>\n      {/* Time in timerset: {time} */}\n    </div>\n  );\n}\nexport default TimerSet;\n","import { useEffect, useRef } from \"react\";\n\nfunction useDidEffect(fn, inputs) {\n    const didMountRef = useRef(false);\n  \n    useEffect(() => {\n      if (didMountRef.current)\n        fn();\n      else\n        didMountRef.current = true;\n    }, inputs);\n}\n\nexport default useDidEffect;","import { useEffect, useState } from \"react\";\nimport useDidEffect from \"./useDidEffect\";\nimport \"./Timer.css\";\nfunction TimerShow(props) {\n  //hooks\n  const [time, setTime] = useState(props.seconds);\n  const [startCountdown, setStartCountdown] = useState(false);\n\n  useDidEffect(() => {\n    if (props.start) {\n      if (time > 0) {\n        setStartCountdown(true);\n      } else {\n        props.stop(false);\n      }\n    }\n  }, [props.start]);\n\n  useEffect(() => {\n    if (props.seconds !== 0) {\n      setTime(props.seconds);\n    }\n  }, [props.seconds]);\n\n  useEffect(() => {\n    if (startCountdown) {\n      const interval = setInterval(() => {\n        setTime((t) => (t > 0 ? t - 1 : StopTimer(interval)));\n      }, 1000);\n    }\n  }, [startCountdown]);\n\n  //functions\n  const StopTimer = (interval) => {\n    //what to do when 0\n    props.stop(false);\n    clearInterval(interval);\n    setTime(props.seconds);\n    setStartCountdown(false);\n  };\n\n  //can delete button\n  const StartButtonClicked = () => {\n    if (time > 0) {\n      setStartCountdown(true);\n    } else {\n      //Tell to put number\n      console.log(\"number\");\n    }\n  };\n\n  //return function\n  return (\n    <div className=\"timer-show-box\">\n      <div className={props.darkMode ? \"time-show-dark\" : \"time-show\"} > {time} </div>\n      {/* <button onClick={StartButtonClicked}>Start Countdown</button> */}\n    </div>\n  );\n}\n\nexport default TimerShow;\n","import { useEffect, useState } from \"react\";\nimport TimerSet from \"./TimerSet\";\nimport TimerShow from \"./TimerShow\";\n\nfunction Timer(props) {\n    //hooks\n    const [time, setTime] = useState(30);\n\n    useEffect(() => {\n        props.timeElapsed(time);\n    }, [time]);\n    //return function\n    return (\n        <div>\n        <TimerSet \n            updateTime={(params) => setTime(params)} \n            inputReference={props.inputReference} \n            darkMode={props.darkMode} \n        />\n        {/* Time in Timer: {time} */}\n        <TimerShow\n            start={props.start}\n            seconds={time}\n            stop={(params) => props.stop(params)}\n            darkMode={props.darkMode}\n        />\n        </div>\n    );\n}\n\nexport default Timer;\n","const WordGenerator = () => {\n    const word = require(\"random-words\");\n\n    let RandomWordsArray = new Array(10);\n\n    for (let i=0; i<10; i++) {\n        RandomWordsArray[i] = word();\n    }\n\n    const RandomWords = RandomWordsArray.join(\" \")\n\n    return (\n        RandomWords\n    );\n}\n\nexport { WordGenerator };","import { useState, useEffect } from \"react\";\n\nfunction useKeyPress(CallBack) {\n    const [keyPressed, setKeyPressed] = useState(null);\n    const ValidKeys = [\n        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\n        's', 't', 'u', 'v', 'w', 'x', 'y', 'z', ' '\n    ];\n\n    useEffect(() => {\n        \n        const KeyDown = (e) => {\n            setKeyPressed(e.key);\n        }\n\n        const KeyUp = () => {\n            setKeyPressed(null);\n        }\n\n        window.addEventListener(\"keydown\", KeyDown);\n        window.addEventListener(\"keyup\", KeyUp); \n\n        return () => {\n            window.removeEventListener(\"keydown\", KeyDown);\n            window.removeEventListener(\"keyup\", KeyUp);\n        }\n    });\n\n    useEffect(() => {\n        if (ValidKeys.includes(keyPressed)) {\n            CallBack(keyPressed);\n        }\n    }, [keyPressed])\n    return keyPressed;\n};\n\nexport default useKeyPress;","import { useState, useEffect } from \"react\";\nimport { WordGenerator } from \"./WordGenerator\";\nimport useKeyPress from \"./useKeyPress\";\nimport \"./WordCheck.css\";\n\nfunction WordCheck(props) {\n  //variables\n  const Words = props.words;\n\n  //hooks\n  const [leftPadding, setLeftPadding] = useState(\n    new Array(40).fill(\" \").join(\"\")\n  );\n  const [finishedChars, setFinishedChars] = useState(\"\");\n  const [currentChar, setCurrentChar] = useState(Words.charAt(0));\n  const [otherChars, setOtherChars] = useState(Words.substr(1));\n  const [corrChars, setCorrChars] = useState(0);\n  const [incorChars, setIncorChars] = useState(0);\n\n  useEffect(() => {\n    return () => props.returnWords(corrChars, incorChars);\n  });\n\n  useKeyPress((key) => {\n    let updatedFinishedChars = finishedChars;\n    let updatedOtherChars = otherChars;\n\n    if (key === currentChar) {\n      setCorrChars((c) => c + 1);\n\n      if (leftPadding.length) {\n        setLeftPadding(leftPadding.substr(1));\n      }\n      updatedFinishedChars += currentChar;\n      setFinishedChars(updatedFinishedChars);\n      setCurrentChar(otherChars.charAt(0));\n      updatedOtherChars = otherChars.substr(1);\n      if (updatedOtherChars.split(\" \").length < 10) {\n        updatedOtherChars += \" \" + WordGenerator();\n      }\n      setOtherChars(updatedOtherChars);\n    } else {\n      setIncorChars((i) => i + 1);\n    }\n  });\n\n  //return function\n  return (\n    <div clasName=\"Text\">\n      {/* <h2>WORDCHECK</h2> */}\n      <p className=\"Character\">\n        <span\n          className={props.darkMode ? \"Character-out-dark\" : \"Character-out\"}\n        >\n          {(leftPadding + finishedChars).slice(-30)}\n        </span>\n        <span\n          className={\n            props.darkMode ? \"Character-current-dark\" : \"Character-current\"\n          }\n        >\n          {currentChar}\n        </span>\n        <span className={props.darkMode ? \"Character-in-dark\" : \"Character-in\"}>\n          {otherChars.substr(0, 30)}\n        </span>\n      </p>\n    </div>\n  );\n}\n\nexport default WordCheck;\n","import { useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\nfunction ResetButton(props) {\n  //hooks\n  const resetRef = useRef();\n\n  const ResetGame = () => {\n    props.clicked();\n    resetRef.current.blur();\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", PressButton);\n    return () => window.removeEventListener(\"keydown\", PressButton);\n  }, []);\n\n  //functions\n  const PressButton = (e) => {\n    if (e.key === \"Enter\") {\n      props.clicked();\n    }\n  };\n\n  //return function\n  return (\n    <div>\n      <button \n        className={props.darkMode ? \"reset-button-dark\" : \"reset-button\"} \n        ref={resetRef} \n        onClick={ResetGame}>\n          ENTER to Restart\n      </button>\n    </div>\n  );\n}\n\nexport default ResetButton;\n","import React from \"react\";\nimport \"./wpm.css\";\nexport const WPM = (props) => {\n  const wpm_shown = (props.charCount.c / 5 / (props.timeElapsed / 60)).toFixed(\n    2\n  );\n\n  const wpm_raw = (\n    (props.charCount.c + props.charCount.i) /\n    5 /\n    (props.timeElapsed / 60)\n  ).toFixed(2);\n\n  const accuracy = (\n    (props.charCount.c * 100) /\n    (props.charCount.c + props.charCount.i)\n  ).toFixed(0);\n\n  return (\n    <div className={props.darkMode ? \"show-results-dark\" : \"show-results\"}>\n      {/* <h2>WPM</h2> */}\n      <div className=\"show-WPM\">WPM: {wpm_shown}</div>\n      <div className=\"show-other-results\">\n        <div>Raw WPM: {wpm_raw}</div>\n        <div>Accuracy: {accuracy}%</div>\n        <div>Char Count: {props.charCount.c}</div>\n        <div>Incorrect Char: {props.charCount.i}</div>\n        {/* <div>Time: {props.timeElapsed}</div> */}\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo1.e561f7af.svg\";","export default __webpack_public_path__ + \"static/media/A-keycap.d762690d.png\";","export default __webpack_public_path__ + \"static/media/F-keycap.7f1fa563.png\";","export default __webpack_public_path__ + \"static/media/N-keycap.dcfb2dda.png\";","export default __webpack_public_path__ + \"static/media/p-keycap.3783ff83.png\";","export default __webpack_public_path__ + \"static/media/U-keycap.af20381d.png\";","import \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Timer from \"./Timer\";\nimport WordCheck from \"./WordCheck\";\nimport ResetButton from \"./ResetButton\";\nimport { WPM } from \"./WPM\";\nimport { WordGenerator } from \"./WordGenerator\";\n\n//image imports\nimport Logo from \"./images/logo1.svg\";\nimport A_keycap from \"./images/A-keycap.png\";\nimport F_keycap from \"./images/F-keycap.png\";\nimport N_keycap from \"./images/N-keycap.png\";\nimport P_keycap from \"./images/p-keycap.png\";\nimport U_keycap from \"./images/U-keycap.png\";\n\nfunction App() {\n  //hooks\n  const [startTimer, setStartTimer] = useState(false);\n  const [showWords, setShowWords] = useState(true);\n  const [corrChars, setCorrChars] = useState(0);\n  const [incorChars, setIncorChars] = useState(0);\n  const [time, setTime] = useState(0);\n  const [showTime, setShowTime] = useState(0);\n  const [darkMode, setDarkMode] = useState(true);\n\n  useEffect(() => {\n    setShowTime(time);\n  }, [showWords]);\n\n  useEffect(() => {\n    if (!startTimer) {\n      window.addEventListener(\"keydown\", StartTheTimer);\n      return () => window.removeEventListener(\"keydown\", StartTheTimer);\n    }\n  }, [startTimer]);\n\n  const inputRef = useRef();\n  const enterRef = useRef();\n  const fifteenRef = useRef();\n  const thirtyRef = useRef();\n  const sixtyRef = useRef();\n  const darkRef = useRef();\n\n  //variables\n  const ValidKeys = [\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \" \",\n  ];\n\n  const Words = WordGenerator();\n\n  //functions\n  const StartTheTimer = (e) => {\n    if (ValidKeys.includes(e.key)) {\n      inputRef.current.blur();\n      enterRef.current.blur();\n      fifteenRef.current.blur();\n      thirtyRef.current.blur();\n      sixtyRef.current.blur();\n      setStartTimer(true);\n      window.removeEventListener(\"keydown\", StartTheTimer);\n    }\n  };\n\n  const StopTheTimer = (params) => {\n    setShowWords(params);\n  };\n\n  //return function\n  return (\n    <div className={darkMode ? \"app-background-dark\" : \"app-background\"}>\n      <a href=\"/Typing-Game\" className=\"logo\">\n        <img src={Logo} alt=\"logo\" />\n        <div className={darkMode ? \"logo-name-dark\" : \"logo-name\"}>\n          TyPeace - for typists to type peacefully\n        </div>\n      </a>\n      <img className=\"keycap A-keycap\" src={A_keycap} alt=\"A-keycap\" />\n      <img className=\"keycap F-keycap\" src={F_keycap} alt=\"F-keycap\" />\n      <img className=\"keycap N-keycap\" src={N_keycap} alt=\"N-keycap\" />\n      <img className=\"keycap p-keycap\" src={P_keycap} alt=\"p-keycap\" />\n      <img className=\"keycap U-keycap\" src={U_keycap} alt=\"U-keycap\" />\n\n      <Timer\n        start={startTimer}\n        stop={StopTheTimer}\n        timeElapsed={(params) => setTime(params)}\n        inputReference={{\n          i: inputRef,\n          e: enterRef,\n          f: fifteenRef,\n          t: thirtyRef,\n          s: sixtyRef,\n        }}\n        darkMode={darkMode}\n      />\n\n      <div>\n        {showWords && (\n          <div className=\"text-box\">\n            <WordCheck\n              returnWords={(correct_params, wrong_params) => {\n                setCorrChars(correct_params);\n                setIncorChars(wrong_params);\n              }}\n              words={Words}\n              darkMode={darkMode}\n            />\n          </div>\n        )}\n      </div>\n\n      <div>\n        {!showWords && (\n          <WPM\n            charCount={{ c: corrChars, i: incorChars }}\n            timeElapsed={showTime}\n            darkMode={darkMode}\n          />\n        )}\n      </div>\n\n      <div className=\"reset-button-preset\">\n        {!showWords && (\n          <ResetButton\n            darkMode={darkMode}\n            clicked={() => {\n              setShowWords(true);\n              setStartTimer(false);\n            }}\n          />\n        )}\n      </div>\n      <div className=\"mode-button-preset\">\n        {darkMode ? (\n          <button\n            className=\"mode-button\"\n            onClick={() => {\n              setDarkMode((d) => !d);\n              darkRef.current.blur();\n            }}\n            ref={darkRef}\n          >\n            Light Mode\n          </button>\n        ) : (\n          <button\n            className=\"mode-button\"\n            onClick={() => {\n              setDarkMode((d) => !d);\n              darkRef.current.blur();\n            }}\n            ref={darkRef}\n          >\n            Dark Mode\n          </button>\n        )}\n      </div>\n      {/* <button onClick={() => setDarkMode((d) => !d)} ref={darkRef}>\n        Dark Mode\n      </button> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}